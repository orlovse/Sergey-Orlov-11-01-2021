{"version":3,"sources":["theme.js","redux/selectors.js","redux/constants.js","utils/index.js","redux/actions.js","resources/svg/dark.svg","resources/svg/light.svg","resources/svg/celsius.svg","resources/svg/fahrenheit.svg","components/navbar/navbar.js","utils/icons.js","resources/svg/1.svg","resources/svg/2.svg","resources/svg/3.svg","resources/svg/4.svg","resources/svg/5.svg","resources/svg/6.svg","resources/svg/7.svg","resources/svg/8.svg","resources/svg/9.svg","resources/svg/10.svg","components/currentWeatherCard/currentWeatherCard.js","components/animatedHeart/animatedHeart.js","components/weatherCard/weatherCard.js","components/mainContainer/mainContainer.js","components/autocompleteSearch/autocompleteSearch.js","pages/home.js","components/favoriteCard/favoriteCard.js","pages/favorites.js","components/404/404.js","pages/notFoundPage.js","App.js","reportWebVitals.js","redux/reducer/currenWeather.js","redux/reducer/fiveDaysWeather.js","redux/reducer/searchCity.js","redux/reducer/localUserOptions.js","redux/reducer/cityByGeolocation.js","redux/reducer/index.js","redux/store.js","index.js","pages/pages.module.css","components/navbar/navbar.module.css","components/weatherCard/weatherCard.module.css","components/favoriteCard/favoriteCard.module.css","components/currentWeatherCard/currentWeatherCard.module.css","components/animatedHeart/animatedHeart.module.css"],"names":["darkTheme","createMuiTheme","palette","type","primary","main","secondary","overrides","MuiPaper","root","background","lightTheme","text","currentCitySelector","state","localUserOptions","currentCity","currentCityKeySelector","createSelector","city","key","darkThemeSelector","name","isDark","fahrenheitSelector","isFahrenheit","favoritesSelector","favorites","cityOptionsSelector","searchCity","entities","currentWeatherSelector","currentWeather","currentWeatherLoadingSelector","loading","currentWeatherLoadedSelector","loaded","fiveDaysModifiedSelector","fiveDaysWeather","weather","get","map","item","temperature","icon","phrase","date","weekday","Date","toLocaleDateString","SET_CURRENT_CITY","SWITCH_DARK","SWITCH_FAHRENHEIT","GET_LOCATION","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","SEARCH_CITY","LOAD_CURRENT_WEATHER","LOAD_FIVE_DAYS_WEATHER","LOAD_CITY_BY_GEOLOCATION","SUCCESS","REQUEST","FAILURE","loadFromLocalStorage","serialisedState","localStorage","getItem","JSON","parse","e","console","warn","saveToLocalStorage","value","toString","valueFromLocalStorage","stringify","setItem","celsiusToFahrenheit","num","Math","floor","getUserTime","getHours","API_KEY","process","BASE_URL","setCurrentCity","payload","switchDark","dispatch","loadCityByGeolocation","coords","getState","a","cityByGeolocation","fetch","latitude","longitude","then","res","json","response","Key","LocalizedName","country","Country","error","loadCurrentWeather","cityId","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","loadFiveDaysWeather","loadAllWeather","isCityLoaded","currentCityKey","connect","isDarkTheme","switchFahrenheit","renderLinks","id","link","exact","to","className","styles","activeClassName","active","Button","color","AppBar","Toolbar","Grid","container","justify","IconButton","onClick","src","darkIcon","alt","lightIcon","fahrenheitIcon","width","celsiusIcon","links","icons","1","2","3","4","5","6","7","8","9","10","getIcon","number","weatherIcon","currentTemperature","round","iconSrc","img","Skeleton","variant","height","Box","details","addFavorite","currentCityName","currentCountry","success","removeFromFavorite","newFavorites","removeFromLocalStorage","warning","isFavoriteCity","style","heart","weatherData","maximum","minimum","max","min","mark","stringTemperature","card","direction","alignItems","middleText","currentWeatherLoading","currentWeatherLoaded","WeatherText","WeatherIcon","Temperature","currentWeatherElement","cardsList","length","xs","md","lg","fontSize","margin","display","cityOptions","loadSearchCity","Autocomplete","maxWidth","getOptionSelected","option","getOptionLabel","options","onInput","target","onChange","event","newValue","renderInput","params","TextField","placeholder","InputProps","endAdornment","cityKey","useEffect","box","favoriteWeather","currentKey","celsius","fahrenheit","cityName","countryName","weatherText","favoritesList","Object","keys","calc","x","y","window","innerWidth","innerHeight","trans1","trans2","trans3","trans4","NotFoundComponent","useSpring","xy","config","mass","tension","friction","props","set","onMouseMove","clientX","clientY","div","transform","interpolate","NotFoundPage","wrapper","Hidden","smDown","mdUp","getLocation","navigator","geolocation","getCurrentPosition","setDarkThemeIfNight","currentTheme","ThemeProvider","theme","Paper","square","Container","path","component","Home","Favorites","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","losding","currentLocation","combineReducers","action","fields","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.92fc052d.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#01579b\",\n    },\n    secondary: {\n      main: \"#ecf9ff\",\n    },\n  },\n\n  overrides: {\n    MuiPaper: {\n      root: {\n        background:\n          \"linear-gradient(90deg, rgba(0,37,70,1) 0%, rgba(74,119,171,1) 100%)\",\n      },\n    },\n  },\n});\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#b3e5fc\",\n    },\n    secondary: {\n      main: \"#ecf9ff\",\n    },\n    text: {\n      primary: \"#373738\",\n    },\n  },\n\n  overrides: {\n    MuiPaper: {\n      root: {\n        background:\n          \" linear-gradient(337deg, rgba(58,168,255,1) 15%, rgba(155,204,255,1) 79%, rgba(255,225,160,1) 99%)\",\n      },\n    },\n  },\n});\n","import get from \"lodash/get\";\nimport { createSelector } from \"reselect\";\n\nexport const currentCitySelector = (state) =>\n  state.localUserOptions.currentCity;\nexport const currentCityKeySelector = createSelector(\n  currentCitySelector,\n  (city) => city.key\n);\nexport const currentCityNameSelector = createSelector(\n  currentCitySelector,\n  (city) => city.name\n);\n\nexport const darkThemeSelector = (state) => state.localUserOptions.isDark;\n\nexport const fahrenheitSelector = (state) =>\n  state.localUserOptions.isFahrenheit;\n\nexport const currentLocationSelector = (state) =>\n  state.localUserOptions.currentLocation;\n\nexport const favoritesSelector = (state) => state.localUserOptions.favorites;\n\nexport const cityOptionsSelector = (state) => state.searchCity.entities;\n\nexport const currentWeatherSelector = (state) => state.currentWeather.entities;\nexport const currentWeatherLoadingSelector = (state) =>\n  state.currentWeather.loading;\nexport const currentWeatherLoadedSelector = (state) =>\n  state.currentWeather.loaded;\n\nexport const fiveDaysWeatherSelector = (state) =>\n  state.fiveDaysWeather.entities;\nexport const fiveDaysModifiedSelector = createSelector(\n  fiveDaysWeatherSelector,\n  (weather) => {\n    const dailyForecasts = get(weather, \"DailyForecasts\", []);\n    // if (!weather.DailyForecasts) return [];\n    return dailyForecasts.map((item) => ({\n      temperature: get(item, \"Temperature\", null),\n      icon: get(item, \"Day.Icon\", null),\n      phrase: get(item, \"Day.IconPhrase\", null),\n      date: get(item, \"Date\", null),\n      weekday: item.Date\n        ? new Date(item.Date).toLocaleDateString(\"en-US\", {\n            weekday: \"long\",\n          })\n        : null,\n    }));\n  }\n);\n","export const SET_CURRENT_CITY = \"SET_CURRENT_CITY\";\nexport const SWITCH_DARK = \"SWITCH_DARK\";\nexport const SWITCH_FAHRENHEIT = \"SWITCH_FAHRENHEIT\";\nexport const GET_LOCATION = \"GET_LOCATION\";\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";\nexport const SEARCH_CITY = \"SEARCH_CITY\";\nexport const LOAD_CURRENT_WEATHER = \"LOAD_CURRENT_WEATHER\";\nexport const LOAD_FIVE_DAYS_WEATHER = \"LOAD_FIVE_DAYS_WEATHER\";\nexport const LOAD_CITY_BY_GEOLOCATION = \"LOAD_CITY_BY_GEOLOCATION\";\nexport const SUCCESS = \"_SUCCESS\";\nexport const REQUEST = \"_REQUEST\";\nexport const FAILURE = \"_FAILURE\";\n","export const getIconName = (number) => {\n  if (number > 0 && number < 6) {\n    return \"sunny\";\n  } else if ((number > 5 && number < 12) || (number > 34 && number < 39)) {\n    return \"cloudy\";\n  } else if (number > 11 && number < 15) {\n    return \"cloud-sun-rays\";\n  } else if ((number > 14 && number < 18) || (number > 40 && number < 43)) {\n    return \"thunder-storm\";\n  } else if (number === 18 || (number > 38 && number < 41)) {\n    return \"rainy\";\n  } else if ((number > 18 && number < 30) || number > 42) {\n    return \"flurries\";\n  } else {\n    return \"cloudy\";\n  }\n};\n\nexport const loadFromLocalStorage = (key) => {\n  try {\n    const serialisedState = localStorage.getItem(key);\n    if (serialisedState === null) return undefined;\n    return JSON.parse(serialisedState);\n  } catch (e) {\n    console.warn(e);\n    return undefined;\n  }\n};\n\nexport const saveToLocalStorage = (key, value) => {\n  try {\n    if (value.toString() === \"[object Object]\") {\n      const valueFromLocalStorage = loadFromLocalStorage(key);\n      value = { ...valueFromLocalStorage, ...value };\n    }\n    const serialisedState = JSON.stringify(value);\n    localStorage.setItem(key, serialisedState);\n  } catch (e) {\n    console.warn(e);\n  }\n};\n\nexport const removeFromLocalStorage = (key) => {\n  try {\n    const favorites = loadFromLocalStorage(\"favorites\");\n    delete favorites[key];\n    const newFavorites = JSON.stringify(favorites);\n    localStorage.setItem(\"favorites\", newFavorites);\n  } catch (e) {\n    console.warn(e);\n  }\n};\n\nexport const celsiusToFahrenheit = (num) => {\n  return Math.floor((num * 9) / 5 + 32);\n};\n\nexport const getUserTime = new Date().getHours();\n\nexport const setDarkThemeIfNight = (switchDark) => {\n  if (\n    (getUserTime > 20 || getUserTime < 6) &&\n    typeof loadFromLocalStorage(\"isDark\") !== \"boolean\"\n  ) {\n    switchDark(true);\n  }\n};\n","import {\n  SWITCH_DARK,\n  GET_LOCATION,\n  LOAD_CURRENT_WEATHER,\n  REQUEST,\n  SUCCESS,\n  FAILURE,\n  LOAD_FIVE_DAYS_WEATHER,\n  SEARCH_CITY,\n  ADD_TO_FAVORITES,\n  REMOVE_FROM_FAVORITES,\n  SET_CURRENT_CITY,\n  SWITCH_FAHRENHEIT,\n  LOAD_CITY_BY_GEOLOCATION,\n} from \"./constants\";\n\nimport { saveToLocalStorage, removeFromLocalStorage } from \"../utils\";\n\nimport { toast } from \"react-toastify\";\nimport {\n  currentCityKeySelector,\n  currentWeatherLoadedSelector,\n} from \"./selectors\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\nconst FIVE_DAYS_URL = process.env.REACT_APP_FIVE_DAYS_URL;\nconst AUTOCOMPLETE_SEARCH_URL = process.env.REACT_APP_AUTOCOMPLETE_SEARCH_URL;\nconst CURRENT_CONDITIONS_URL = process.env.REACT_APP_CURRENT_CONDITIONS_URL;\nconst GEOPOSITION_URL = process.env.REACT_APP_GEOPOSITION_URL;\n\nexport const setCurrentCity = (city) => ({\n  type: SET_CURRENT_CITY,\n  payload: { city },\n});\n\nexport const switchDark = (type) => (dispatch) => {\n  saveToLocalStorage(\"isDark\", type);\n  dispatch({\n    type: SWITCH_DARK,\n    payload: { isDark: type },\n  });\n};\n\nexport const switchFahrenheit = (type) => (dispatch) => {\n  saveToLocalStorage(\"isFahrenheit\", type);\n  dispatch({\n    type: SWITCH_FAHRENHEIT,\n    payload: { isFahrenheit: type },\n  });\n};\n\nexport const getLocation = () => async (dispatch, getState) => {\n  const geolocation = navigator.geolocation;\n  geolocation.getCurrentPosition((position) => {\n    dispatch({\n      type: GET_LOCATION,\n      payload: { position },\n    });\n    loadCityByGeolocation(position.coords, dispatch, getState);\n  });\n};\n\nconst loadCityByGeolocation = async (coords, dispatch, getState) => {\n  const state = getState();\n  const loading = state.cityByGeolocation.loading;\n  const loaded = state.cityByGeolocation.loaded;\n  if (loading || loaded) return;\n  dispatch({ type: LOAD_CITY_BY_GEOLOCATION + REQUEST });\n  try {\n    const response = await fetch(\n      `${BASE_URL}/${GEOPOSITION_URL}?apikey=${API_KEY}&q=${coords.latitude},${coords.longitude}`\n    ).then((res) => res.json());\n    dispatch({ type: LOAD_CITY_BY_GEOLOCATION + SUCCESS, response });\n    const city = {\n      key: response.Key,\n      name: response.LocalizedName,\n      country: response.Country.LocalizedName,\n    };\n    dispatch({ type: SET_CURRENT_CITY, payload: { city } });\n  } catch (error) {\n    dispatch({ type: LOAD_CITY_BY_GEOLOCATION + FAILURE, error });\n  }\n};\n\nexport const addFavorite = (\n  key,\n  currentCityName,\n  currentCountry,\n  currentWeather\n) => (dispatch) => {\n  saveToLocalStorage(\"favorites\", {\n    [key]: { currentCityName, currentCountry, currentWeather },\n  });\n  dispatch({\n    type: ADD_TO_FAVORITES,\n    payload: { key, currentCityName, currentCountry, currentWeather },\n  });\n  toast.success(\"City added to favorites!\", {\n    position: \"bottom-center\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport const removeFromFavorite = (key) => (dispatch) => {\n  removeFromLocalStorage(key);\n  dispatch({\n    type: REMOVE_FROM_FAVORITES,\n    payload: { key },\n  });\n  toast.warning(\"City removed from favorites!\", {\n    position: \"bottom-center\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nconst loadCurrentWeather = async (cityId, dispatch, getState) => {\n  const state = getState();\n  const loading = state.currentWeather.loading;\n  if (loading) return;\n  dispatch({ type: LOAD_CURRENT_WEATHER + REQUEST });\n  try {\n    let response = await fetch(\n      `${BASE_URL}${CURRENT_CONDITIONS_URL}/${cityId}?apikey=${API_KEY}`\n    ).then((res) => res.json());\n\n    dispatch({ type: LOAD_CURRENT_WEATHER + SUCCESS, response: response[0] });\n  } catch (error) {\n    dispatch({ type: LOAD_CURRENT_WEATHER + FAILURE, error });\n    toast.error(\"Error loading current weather!\", {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n};\n\nconst loadFiveDaysWeather = async (cityId, dispatch, getState) => {\n  const state = getState();\n  const loading = state.fiveDaysWeather.loading;\n  if (loading) return;\n  dispatch({ type: LOAD_FIVE_DAYS_WEATHER + REQUEST });\n  try {\n    const response = await fetch(\n      `${BASE_URL}${FIVE_DAYS_URL}/${cityId}?apikey=${API_KEY}&metric=true`\n    ).then((res) => res.json());\n    dispatch({ type: LOAD_FIVE_DAYS_WEATHER + SUCCESS, response });\n  } catch (error) {\n    dispatch({ type: LOAD_FIVE_DAYS_WEATHER + FAILURE, error });\n    toast.error(\"Error loading weather!\", {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n};\n\nexport const loadAllWeather = (cityId) => async (dispatch, getState) => {\n  const state = getState();\n  const isCityLoaded = currentWeatherLoadedSelector(state);\n  const currentCityKey = currentCityKeySelector(state);\n  if (!isCityLoaded || cityId !== currentCityKey) {\n    loadCurrentWeather(cityId, dispatch, getState);\n    loadFiveDaysWeather(cityId, dispatch, getState);\n  }\n};\n\nexport const loadSearchCity = (name) => async (dispatch, getState) => {\n  const state = getState();\n  const loading = state.loading;\n  const loaded = state.loaded;\n  if (loading || loaded) return;\n  dispatch({ type: SEARCH_CITY + REQUEST });\n  try {\n    const response = await fetch(\n      `${BASE_URL}${AUTOCOMPLETE_SEARCH_URL}?apikey=${API_KEY}&q=${name}`\n    ).then((res) => res.json());\n    dispatch({ type: SEARCH_CITY + SUCCESS, response });\n  } catch (error) {\n    dispatch({ type: SEARCH_CITY + FAILURE, error });\n    toast.error(\"Error!\", {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n};\n","export default __webpack_public_path__ + \"static/media/dark.c8d5dfc2.svg\";","export default __webpack_public_path__ + \"static/media/light.9bde1ba7.svg\";","export default __webpack_public_path__ + \"static/media/celsius.a143501f.svg\";","export default __webpack_public_path__ + \"static/media/fahrenheit.73498b2f.svg\";","import { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { AppBar, Button, Grid, IconButton, Toolbar } from \"@material-ui/core\";\nimport styles from \"./navbar.module.css\";\nimport { darkThemeSelector, fahrenheitSelector } from \"../../redux/selectors\";\nimport { switchDark, switchFahrenheit } from \"../../redux/actions\";\n\nimport darkIcon from \"../../resources/svg/dark.svg\";\nimport lightIcon from \"../../resources/svg/light.svg\";\nimport celsiusIcon from \"../../resources/svg/celsius.svg\";\nimport fahrenheitIcon from \"../../resources/svg/fahrenheit.svg\";\n\nconst Navbar = ({\n  isDarkTheme,\n  switchDark,\n  isFahrenheit,\n  switchFahrenheit,\n}) => {\n  const links = [\n    { id: 1, name: \"Home\", link: \"/\" },\n    { id: 2, name: \"Favorites\", link: \"/favorites\" },\n  ];\n\n  const handleSwitchTheme = () => {\n    switchDark(!isDarkTheme);\n  };\n\n  const handleSwitchFahrenheit = () => {\n    switchFahrenheit(!isFahrenheit);\n  };\n\n  const renderLinks = links.map(({ id, name, link }) => (\n    <NavLink\n      exact\n      key={id}\n      to={link}\n      className={styles.link}\n      activeClassName={styles.active}\n    >\n      <Button color=\"secondary\">{name}</Button>\n    </NavLink>\n  ));\n\n  return (\n    <>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Grid container justify=\"space-between\">\n            <div>\n              <IconButton onClick={handleSwitchTheme}>\n                {isDarkTheme ? (\n                  <img src={darkIcon} alt=\"dark theme icon\"></img>\n                ) : (\n                  <img src={lightIcon} alt=\"light theme icon\"></img>\n                )}\n              </IconButton>\n\n              <IconButton onClick={handleSwitchFahrenheit}>\n                {isFahrenheit ? (\n                  <img\n                    src={fahrenheitIcon}\n                    width=\"30px\"\n                    alt=\"dark theme icon\"\n                  ></img>\n                ) : (\n                  <img\n                    src={celsiusIcon}\n                    width=\"30px\"\n                    alt=\"light theme icon\"\n                  ></img>\n                )}\n              </IconButton>\n            </div>\n\n            <div className={styles.links}>{renderLinks}</div>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nNavbar.propTypes = {\n  isDarkTheme: PropTypes.bool.isRequired,\n  isFahrenheit: PropTypes.bool.isRequired,\n  switchDark: PropTypes.func.isRequired,\n  switchFahrenheit: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  (state) => ({\n    isDarkTheme: darkThemeSelector(state),\n    isFahrenheit: fahrenheitSelector(state),\n  }),\n  { switchDark, switchFahrenheit }\n)(Navbar);\n","import svg_1 from \"../resources/svg/1.svg\";\nimport svg_2 from \"../resources/svg/2.svg\";\nimport svg_3 from \"../resources/svg/3.svg\";\nimport svg_4 from \"../resources/svg/4.svg\";\nimport svg_5 from \"../resources/svg/5.svg\";\nimport svg_6 from \"../resources/svg/6.svg\";\nimport svg_7 from \"../resources/svg/7.svg\";\nimport svg_8 from \"../resources/svg/8.svg\";\nimport svg_9 from \"../resources/svg/9.svg\";\nimport svg_10 from \"../resources/svg/10.svg\";\n\nconst icons = {\n  1: svg_1,\n  2: svg_2,\n  3: svg_3,\n  4: svg_4,\n  5: svg_5,\n  6: svg_6,\n  7: svg_7,\n  8: svg_8,\n  9: svg_9,\n  10: svg_10,\n};\n\nexport const getIcon = (number) => {\n  if (!number) {\n    return null;\n  } else if (number > 0 && number < 3) {\n    return icons[1];\n  } else if (number > 2 && number < 7) {\n    return icons[2];\n  } else if (number > 6 && number < 12) {\n    return icons[3];\n  } else if (number > 11 && number < 15) {\n    return icons[4];\n  } else if ((number > 4 && number < 18) || (number > 40 && number < 43)) {\n    return icons[5];\n  } else if (number === 18 || (number > 38 && number < 41)) {\n    return icons[6];\n  } else if ((number > 18 && number < 30) || number > 42) {\n    return icons[7];\n  } else if (number === 32) {\n    return icons[8];\n  } else if (number > 32 && number < 35) {\n    return icons[9];\n  } else if (number > 34 && number < 39) {\n    return icons[10];\n  } else {\n    return icons[1];\n  }\n};\n","export default __webpack_public_path__ + \"static/media/1.5cf38d71.svg\";","export default __webpack_public_path__ + \"static/media/2.d7bc37cf.svg\";","export default __webpack_public_path__ + \"static/media/3.7feaeea5.svg\";","export default __webpack_public_path__ + \"static/media/4.e74c1a7e.svg\";","export default __webpack_public_path__ + \"static/media/5.9a33f6b8.svg\";","export default __webpack_public_path__ + \"static/media/6.3f462c92.svg\";","export default __webpack_public_path__ + \"static/media/7.894413c2.svg\";","export default __webpack_public_path__ + \"static/media/8.c969a3e3.svg\";","export default __webpack_public_path__ + \"static/media/9.8cff190b.svg\";","export default __webpack_public_path__ + \"static/media/10.1059c2e4.svg\";","import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport get from \"lodash/get\";\nimport { Box } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport styles from \"./currentWeatherCard.module.css\";\nimport { getIcon } from \"../../utils/icons\";\nimport { fahrenheitSelector } from \"../../redux/selectors\";\n\nconst CurrentWeatherCard = ({\n  weatherIcon,\n  temperature,\n  currentCity,\n  isFahrenheit,\n}) => {\n  const currentTemperature = isFahrenheit\n    ? get(temperature, \"Imperial.Value\", 0) + \" F\"\n    : Math.round(get(temperature, \"Metric.Value\", 0)) + \" \\u00b0C\";\n  const iconSrc = getIcon(weatherIcon);\n  const img = iconSrc ? (\n    <img width=\"180px\" src={iconSrc} alt=\"weather-icon\"></img>\n  ) : (\n    <Skeleton variant=\"circle\" width={100} height={100} />\n  );\n  return (\n    <Box className={styles.root}>\n      <div>{img}</div>\n\n      <div className={styles.details}>\n        <div>\n          <h2>{currentCity.name || <Skeleton width={120} />}</h2>\n          <h5>{currentCity.country || <Skeleton width={120} />} </h5>\n        </div>\n        <h3>{currentTemperature || <Skeleton width={60} />}</h3>\n      </div>\n    </Box>\n  );\n};\n\nCurrentWeatherCard.propTypes = {\n  weatherIcon: PropTypes.number.isRequired,\n  temperature: PropTypes.object.isRequired,\n  currentCity: PropTypes.object.isRequired,\n  isFahrenheit: PropTypes.bool.isRequired,\n};\n\nexport default connect((state) => ({\n  isFahrenheit: fahrenheitSelector(state),\n}))(CurrentWeatherCard);\n","import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  favoritesSelector,\n  currentWeatherSelector,\n  currentCitySelector,\n} from \"../../redux/selectors\";\nimport { addFavorite, removeFromFavorite } from \"../../redux/actions\";\nimport styles from \"./animatedHeart.module.css\";\n\nconst AnimatedHeart = ({\n  addFavorite,\n  currentCity,\n  currentCityKey,\n  removeFromFavorite,\n  currentWeather,\n  favorites,\n}) => {\n  const { name, country } = currentCity;\n  const isFavoriteCity = !!favorites[currentCityKey];\n  const handleClick = () => {\n    if (isFavoriteCity) {\n      removeFromFavorite(currentCityKey);\n    } else {\n      addFavorite(currentCityKey, name, country, currentWeather);\n    }\n  };\n  const style = isFavoriteCity ? styles.active : styles.heart;\n  return <div className={style} onClick={handleClick}></div>;\n};\n\nAnimatedHeart.propTypes = {\n  addFavorite: PropTypes.func.isRequired,\n  currentCityKey: PropTypes.string.isRequired,\n  currentCity: PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    country: PropTypes.string.isRequired,\n  }).isRequired,\n  removeFromFavorite: PropTypes.func.isRequired,\n  currentWeather: PropTypes.object,\n  favorites: PropTypes.object,\n};\n\nexport default connect(\n  (state) => ({\n    currentCity: currentCitySelector(state),\n    currentWeather: currentWeatherSelector(state),\n    favorites: favoritesSelector(state),\n  }),\n  { addFavorite, removeFromFavorite }\n)(AnimatedHeart);\n","import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport get from \"lodash/get\";\nimport { Grid } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { getIcon } from \"../../utils/icons\";\nimport styles from \"./weatherCard.module.css\";\nimport { fahrenheitSelector } from \"../../redux/selectors\";\nimport { celsiusToFahrenheit } from \"../../utils\";\n\nconst WeatherCard = ({ weatherData, isFahrenheit }) => {\n  const icon = get(weatherData, \"icon\", null);\n  const phrase = get(weatherData, \"phrase\", null);\n  const weekday = get(weatherData, \"weekday\", null);\n\n  const maximum = get(weatherData, \"temperature.Maximum.Value\", null);\n  const minimum = get(weatherData, \"temperature.Minimum.Value\", null);\n\n  const max = isFahrenheit ? celsiusToFahrenheit(maximum) : Math.round(maximum);\n  const min = isFahrenheit ? celsiusToFahrenheit(minimum) : Math.round(minimum);\n  const mark = isFahrenheit ? \"F\" : \"\\u00b0C\";\n  const stringTemperature = `${max} ${mark} / ${min} ${mark}`;\n\n  const iconSrc = getIcon(icon);\n  const img = iconSrc ? (\n    <img width=\"100px\" src={iconSrc} alt=\"weather-icon\"></img>\n  ) : (\n    <Skeleton variant=\"circle\" width={80} height={80} />\n  );\n\n  return (\n    <div className={styles.card}>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        {img}\n        <div className={styles.text}>{weekday || <Skeleton width={120} />}</div>\n        <div>{phrase || <Skeleton width={120} />}</div>\n        <div className={styles.middleText}>\n          {stringTemperature || <Skeleton width={120} />}\n        </div>\n      </Grid>\n    </div>\n  );\n};\n\nWeatherCard.propTypes = {\n  weatherData: PropTypes.object,\n  isFahrenheit: PropTypes.bool.isRequired,\n};\n\nexport default connect((state) => ({\n  isFahrenheit: fahrenheitSelector(state),\n}))(WeatherCard);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {\n  currentWeatherSelector,\n  fiveDaysModifiedSelector,\n  currentCitySelector,\n  currentCityKeySelector,\n  currentWeatherLoadingSelector,\n  currentWeatherLoadedSelector,\n} from \"../../redux/selectors\";\nimport CurrentWeatherCard from \"../currentWeatherCard\";\nimport AnimatedHeart from \"../animatedHeart\";\nimport WeatherCard from \"../weatherCard\";\n\nconst MainContainer = ({\n  currentWeather,\n  currentWeatherLoading,\n  currentWeatherLoaded,\n  fiveDaysWeather,\n  currentCity,\n  currentCityKey,\n}) => {\n  const { WeatherText, WeatherIcon, Temperature } = currentWeather;\n\n  const currentWeatherElement =\n    !currentWeatherLoading && currentWeatherLoaded ? (\n      <CurrentWeatherCard\n        weatherIcon={WeatherIcon}\n        temperature={Temperature}\n        currentCity={currentCity}\n      />\n    ) : (\n      <Grid container alignItems=\"center\">\n        <Skeleton variant=\"circle\" width={100} height={100} />\n        <div>\n          <Skeleton variant=\"text\" width={100} />\n          <Skeleton variant=\"text\" width={100} />\n          <Skeleton variant=\"text\" width={100} />\n        </div>\n      </Grid>\n    );\n\n  const cardsList =\n    fiveDaysWeather.length > 1\n      ? fiveDaysWeather.map((weatherData) => (\n          <Grid item xs={12} md={6} lg=\"auto\" key={weatherData.date}>\n            <WeatherCard weatherData={weatherData} />\n          </Grid>\n        ))\n      : [1, 2, 3, 4, 5].map((item) => (\n          <Grid item xs={12} md={6} lg=\"auto\" key={item}>\n            <WeatherCard weatherData={null} />\n          </Grid>\n        ));\n\n  return (\n    <Box className=\"box-padding\">\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12} md=\"auto\">\n          {currentWeatherElement}\n        </Grid>\n        <Grid item xs={12} md=\"auto\" className=\"flex-center\">\n          <AnimatedHeart currentCityKey={currentCityKey} />\n        </Grid>\n      </Grid>\n      <h2 style={{ fontSize: \"3rem\", margin: \"0\" }}>\n        {WeatherText || (\n          <Skeleton width={150} style={{ display: \"inline-block\" }} />\n        )}\n      </h2>\n      <Grid container justify=\"space-between\">\n        {cardsList}\n      </Grid>\n    </Box>\n  );\n};\n\nMainContainer.propTypes = {\n  currentWeather: PropTypes.object.isRequired,\n  currentWeatherLoading: PropTypes.bool.isRequired,\n  currentWeatherLoaded: PropTypes.bool.isRequired,\n  fiveDaysWeather: PropTypes.array.isRequired,\n  currentCity: PropTypes.object.isRequired,\n  currentCityKey: PropTypes.string.isRequired,\n};\n\nexport default connect((state) => ({\n  currentWeather: currentWeatherSelector(state),\n  currentWeatherLoading: currentWeatherLoadingSelector(state),\n  currentWeatherLoaded: currentWeatherLoadedSelector(state),\n  fiveDaysWeather: fiveDaysModifiedSelector(state),\n  currentCity: currentCitySelector(state),\n  currentCityKey: currentCityKeySelector(state),\n}))(MainContainer);\n","import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport get from \"lodash/get\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  loadSearchCity,\n  setCurrentCity,\n  loadAllWeather,\n} from \"../../redux/actions\";\nimport { cityOptionsSelector } from \"../../redux/selectors\";\nimport { Box, TextField } from \"@material-ui/core\";\n\nconst AutocompleteSearch = ({\n  cityOptions,\n  loadSearchCity,\n  setCurrentCity,\n  loadAllWeather,\n}) => {\n  return (\n    <Box className=\"box-padding\">\n      <Autocomplete\n        style={{ maxWidth: 400, margin: \"0 auto\" }}\n        getOptionSelected={(option, value) =>\n          option.LocalizedName === value.LocalizedName\n        }\n        getOptionLabel={(option) => option.LocalizedName}\n        options={cityOptions}\n        onInput={(e) => loadSearchCity(e.target.value)}\n        onChange={(event, newValue) => {\n          if (newValue) {\n            const city = {\n              key: newValue.Key,\n              name: newValue.LocalizedName,\n              country: get(newValue, \"Country.LocalizedName\", null),\n            };\n            loadAllWeather(newValue.Key);\n            setCurrentCity(city);\n          }\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            placeholder=\"search\"\n            variant=\"outlined\"\n            InputProps={{\n              ...params.InputProps,\n              endAdornment: <>{params.InputProps.endAdornment}</>,\n            }}\n          />\n        )}\n      />\n    </Box>\n  );\n};\n\nAutocompleteSearch.propTypes = {\n  cityOptions: PropTypes.array.isRequired,\n  loadSearchCity: PropTypes.func.isRequired,\n  setCurrentCity: PropTypes.func.isRequired,\n  loadAllWeather: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  (state) => ({\n    cityOptions: cityOptionsSelector(state),\n  }),\n  { loadSearchCity, setCurrentCity, loadAllWeather }\n)(AutocompleteSearch);\n","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Box } from \"@material-ui/core\";\nimport styles from \"./pages.module.css\";\nimport MainContainer from \"../components/mainContainer\";\nimport AutocompleteSearch from \"../components/autocompleteSearch\";\nimport { loadAllWeather } from \"../redux/actions\";\nimport { currentCityKeySelector } from \"../redux/selectors\";\n\nconst Home = ({ loadAllWeather, cityKey }) => {\n  useEffect(() => {\n    loadAllWeather(cityKey);\n  }, [cityKey, loadAllWeather]);\n\n  return (\n    <>\n      <Box className={styles.box}>\n        <AutocompleteSearch />\n      </Box>\n      <Box className={styles.box}>\n        <MainContainer />\n      </Box>\n    </>\n  );\n};\n\nHome.propTypes = {\n  loadAllWeather: PropTypes.func.isRequired,\n  cityKey: PropTypes.string.isRequired,\n};\n\nexport default connect(\n  (state) => ({\n    cityKey: currentCityKeySelector(state),\n  }),\n  {\n    loadAllWeather,\n  }\n)(Home);\n","import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport styles from \"./favoriteCard.module.css\";\nimport AnimatedHeart from \"../animatedHeart\";\nimport { getIcon } from \"../../utils/icons\";\nimport { fahrenheitSelector } from \"../../redux/selectors\";\nimport { setCurrentCity, loadAllWeather } from \"../../redux/actions\";\n\nconst FavoriteCard = ({\n  favoriteWeather,\n  currentKey,\n  isFahrenheit,\n  setCurrentCity,\n  loadAllWeather,\n}) => {\n  const celsius = get(\n    favoriteWeather,\n    \"currentWeather.Temperature.Metric.Value\",\n    0\n  );\n  const fahrenheit = get(\n    favoriteWeather,\n    \"currentWeather.Temperature.Imperial.Value\",\n    0\n  );\n  const cityName = get(favoriteWeather, \"currentCityName\", null);\n  const countryName = get(favoriteWeather, \"currentCountry\", null);\n  const weatherText = get(favoriteWeather, \"currentWeather.WeatherText\", null);\n\n  const setAsCurrentCity = () => {\n    loadAllWeather(currentKey);\n    setCurrentCity({ key: currentKey, name: cityName, country: countryName });\n  };\n\n  const currentTemperature = isFahrenheit\n    ? fahrenheit + \" F\"\n    : Math.round(celsius) + \" \\u00b0C\";\n\n  const iconSrc = getIcon(\n    get(favoriteWeather, \"currentWeather.WeatherIcon\", null)\n  );\n  const img = iconSrc ? (\n    <img width=\"100px\" src={iconSrc} alt=\"weather-icon\"></img>\n  ) : (\n    <Skeleton variant=\"circle\" width={80} height={80} />\n  );\n\n  return (\n    <div className={styles.card}>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        {img}\n\n        <Link to=\"/\" onClick={setAsCurrentCity} className={styles.text}>\n          {cityName || <Skeleton width={120} />}\n        </Link>\n\n        <div>{countryName || <Skeleton width={100} />}</div>\n        <div>{weatherText || <Skeleton width={100} />}</div>\n        <div className={styles.middleText}>\n          {currentTemperature || <Skeleton width={100} />}\n        </div>\n        <AnimatedHeart currentCityKey={currentKey} />\n      </Grid>\n    </div>\n  );\n};\n\nFavoriteCard.propTypes = {\n  // favoriteWeather: PropTypes.object.isRequired,\n  currentKey: PropTypes.string.isRequired,\n  isFahrenheit: PropTypes.bool.isRequired,\n  setCurrentCity: PropTypes.func.isRequired,\n  loadAllWeather: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  (state) => ({\n    isFahrenheit: fahrenheitSelector(state),\n  }),\n  { setCurrentCity, loadAllWeather }\n)(FavoriteCard);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport FavoriteCard from \"../components/favoriteCard\";\nimport { favoritesSelector } from \"../redux/selectors\";\n\nconst Favorites = ({ favorites }) => {\n  const favoritesList = Object.keys(favorites).map((key) => (\n    <Grid item xs={12} md={6} lg=\"auto\" key={key}>\n      <FavoriteCard currentKey={key} favoriteWeather={favorites[key]} />\n    </Grid>\n  ));\n  return <Grid container>{favoritesList}</Grid>;\n};\n\nFavorites.propTypes = {\n  favorites: PropTypes.object,\n};\n\nexport default connect((state) => ({\n  favorites: favoritesSelector(state),\n}))(Favorites);\n","import React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./styles.css\"; // // Icons made by Freepik from www.flaticon.com\nimport { Link } from \"react-router-dom\";\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2];\nconst trans1 = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`;\nconst trans2 = (x, y) => `translate3d(${x / 8 + 35}px,${y / 8 - 230}px,0)`;\nconst trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`;\nconst trans4 = (x, y) => `translate3d(${x / 3.5}px,${y / 3.5}px,0)`;\n\nconst NotFoundComponent = () => {\n  const [props, set] = useSpring(() => ({\n    xy: [0, 0],\n    config: { mass: 10, tension: 550, friction: 140 },\n  }));\n  return (\n    <div\n      className=\"container\"\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}\n    >\n      <animated.div\n        className=\"card1\"\n        style={{ transform: props.xy.interpolate(trans1) }}\n      />\n      <animated.div\n        className=\"card2\"\n        style={{ transform: props.xy.interpolate(trans2) }}\n      />\n      <animated.div\n        className=\"card3\"\n        style={{ transform: props.xy.interpolate(trans3) }}\n      />\n      <animated.div\n        className=\"card4\"\n        style={{ transform: props.xy.interpolate(trans4) }}\n      >\n        <div>404 Page not found</div>\n        <Link to=\"/\">Go to home page</Link>\n      </animated.div>\n    </div>\n  );\n};\n\nexport default NotFoundComponent;\n","import styles from \"./pages.module.css\";\nimport { Link } from \"react-router-dom\";\nimport NotFound from \"../components/404\";\nimport { Hidden } from \"@material-ui/core\";\nconst NotFoundPage = () => {\n  return (\n    <div className={styles.wrapper}>\n      <Hidden smDown>\n        <NotFound />\n      </Hidden>\n      <Hidden mdUp>\n        <div className={styles.text}>\n          <div>404 Page not found</div>\n          <Link to=\"/\" className={styles.link}>\n            Go to home page\n          </Link>\n        </div>\n      </Hidden>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Container, Grid, Paper } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { darkThemeSelector } from \"./redux/selectors\";\nimport Navbar from \"./components/navbar\";\nimport Home from \"./pages/home\";\nimport Favorites from \"./pages/favorites\";\nimport NotFoundPage from \"./pages/notFoundPage\";\nimport { getLocation, switchDark } from \"./redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport { setDarkThemeIfNight } from \"./utils\";\n\nfunction App({ isDarkTheme, getLocation, switchDark }) {\n  useEffect(() => {\n    getLocation();\n    setDarkThemeIfNight(switchDark);\n  }, []);\n\n  const currentTheme =\n    isDarkTheme === true ? { ...darkTheme } : { ...lightTheme };\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <div className=\"App\">\n        <ToastContainer autoClose={2000} />\n        <Navbar />\n        <Paper className=\"box\" square>\n          <Container>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/favorites\" component={Favorites} />\n                <Route path=\"/\" component={NotFoundPage} />\n              </Switch>\n            </Grid>\n          </Container>\n        </Paper>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nApp.propTypes = {\n  isDarkTheme: PropTypes.bool,\n};\n\nexport default connect(\n  (state) => ({\n    isDarkTheme: darkThemeSelector(state),\n  }),\n  { getLocation, switchDark }\n)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { LOAD_CURRENT_WEATHER, REQUEST, SUCCESS, FAILURE } from \"../constants\";\n\nconst initialState = {\n  entities: {},\n  loading: false,\n  loaded: false,\n  error: null,\n};\n\nexport const currentWeather = (state = initialState, action) => {\n  const { type, response, error } = action;\n\n  switch (type) {\n    case LOAD_CURRENT_WEATHER + REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case LOAD_CURRENT_WEATHER + SUCCESS:\n      return {\n        ...state,\n        entities: response,\n        loading: false,\n        loaded: true,\n      };\n    case LOAD_CURRENT_WEATHER + FAILURE:\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        error,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  LOAD_FIVE_DAYS_WEATHER,\n  REQUEST,\n  SUCCESS,\n  FAILURE,\n} from \"../constants\";\n\nconst initialState = {\n  entities: {},\n  loading: false,\n  loaded: false,\n  error: null,\n};\n\nexport const fiveDaysWeather = (state = initialState, action) => {\n  const { type, response, error } = action;\n  switch (type) {\n    case LOAD_FIVE_DAYS_WEATHER + REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case LOAD_FIVE_DAYS_WEATHER + SUCCESS:\n      return {\n        ...state,\n        entities: response,\n        loading: false,\n        loaded: true,\n      };\n    case LOAD_FIVE_DAYS_WEATHER + FAILURE:\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        error,\n      };\n    default:\n      return state;\n  }\n};\n","import { SEARCH_CITY, REQUEST, SUCCESS, FAILURE } from \"../constants\";\n\nconst initialState = {\n  entities: [],\n  losding: false,\n  loaded: false,\n  error: null,\n};\n\nexport const searchCity = (state = initialState, action) => {\n  const { type, response, error } = action;\n  switch (type) {\n    case SEARCH_CITY + REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case SEARCH_CITY + SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        entities: response,\n      };\n    case SEARCH_CITY + FAILURE:\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        error,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  SWITCH_DARK,\n  SWITCH_FAHRENHEIT,\n  GET_LOCATION,\n  ADD_TO_FAVORITES,\n  REMOVE_FROM_FAVORITES,\n  SET_CURRENT_CITY,\n} from \"../constants\";\n\nimport { loadFromLocalStorage } from \"../../utils\";\n\nconst initialState = {\n  isDark: loadFromLocalStorage(\"isDark\") || false,\n  isFahrenheit: loadFromLocalStorage(\"isFahrenheit\") || false,\n  currentLocation: null,\n  currentCity: { key: \"215854\", name: \"Tel Aviv\", country: \"Israel\" },\n  favorites: loadFromLocalStorage(\"favorites\") || {},\n};\n\nexport const localUserOptions = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_CURRENT_CITY:\n      return {\n        ...state,\n        currentCity: payload.city,\n      };\n    case SWITCH_DARK:\n      return {\n        ...state,\n        isDark: payload.isDark,\n      };\n    case SWITCH_FAHRENHEIT:\n      return {\n        ...state,\n        isFahrenheit: payload.isFahrenheit,\n      };\n    case GET_LOCATION:\n      return {\n        ...state,\n        currentLocation: {\n          latitude: payload.position.coords.latitude,\n          longitude: payload.position.coords.longitude,\n        },\n      };\n    case ADD_TO_FAVORITES:\n      const { key, currentCityName, currentCountry, currentWeather } = payload;\n      return {\n        ...state,\n        favorites: {\n          ...state.favorites,\n          [key]: { currentCityName, currentCountry, currentWeather },\n        },\n      };\n    case REMOVE_FROM_FAVORITES:\n      const { ...fields } = state.favorites;\n      delete fields[payload.key];\n      return {\n        ...state,\n        favorites: fields,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  LOAD_CITY_BY_GEOLOCATION,\n  REQUEST,\n  SUCCESS,\n  FAILURE,\n} from \"../constants\";\n\nconst initialState = {\n  entities: {},\n  loading: false,\n  loaded: false,\n  error: null,\n};\n\nexport const cityByGeolocation = (state = initialState, action) => {\n  const { type, response, error } = action;\n\n  switch (type) {\n    case LOAD_CITY_BY_GEOLOCATION + REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case LOAD_CITY_BY_GEOLOCATION + SUCCESS:\n      return {\n        ...state,\n        entities: response,\n        loading: false,\n        loaded: true,\n      };\n    case LOAD_CITY_BY_GEOLOCATION + FAILURE:\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        error,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport { currentWeather } from \"./currenWeather\";\nimport { fiveDaysWeather } from \"./fiveDaysWeather\";\nimport { searchCity } from \"./searchCity\";\nimport { localUserOptions } from \"./localUserOptions\";\nimport { cityByGeolocation } from \"./cityByGeolocation\";\n\nexport default combineReducers({\n  localUserOptions,\n  searchCity,\n  cityByGeolocation,\n  currentWeather,\n  fiveDaysWeather,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\n\nexport default createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"pages_box__3sVH5\",\"wrapper\":\"pages_wrapper__3iFT3\",\"text\":\"pages_text__Qy8jJ\",\"link\":\"pages_link__dNw_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"links\":\"navbar_links__1yYc3\",\"link\":\"navbar_link__t2aFF\",\"active\":\"navbar_active__1LL-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"weatherCard_card__ADvyF\",\"text\":\"weatherCard_text__3W89Q\",\"middleText\":\"weatherCard_middleText__2iYtV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"favoriteCard_card__2qylj\",\"text\":\"favoriteCard_text__2jq8_\",\"middleText\":\"favoriteCard_middleText__2b0ju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"currentWeatherCard_root__2nxBQ\",\"details\":\"currentWeatherCard_details__1sW11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heart\":\"animatedHeart_heart__11D4A\",\"active\":\"animatedHeart_active__1g0AO\",\"fave-heart\":\"animatedHeart_fave-heart__r8SUW\"};"],"sourceRoot":""}